#!/bin/bash -e

BIN_DIR=/var/vcap/packages/gemfireserver/vFabric_GemFire/bin
LIB_DIR=/var/vcap/packages/gemfireserver/vFabric_GemFire/lib
RUN_DIR=/var/vcap/sys/run/gemfirelocator
LOG_DIR=/var/vcap/sys/log/gemfirelocator
PIDFILE=$RUN_DIR/gemfirelocator.pid
STDOUTLOG=$LOG_DIR/gemfirelocator.stdout.log
STDERRLOG=$LOG_DIR/gemfirelocator.stderr.log
LOCATORNAME=locator<%= spec.index %>
LOCATORIPADDR=<%= spec.networks.send(properties.networks.cluster).ip %>

export JAVA_HOME=/var/vcap/packages/gemfire_jvm7
export PATH=$PATH:$JAVA_HOME/bin:$BIN_DIR

# erb template code takes the list of addresses for locators from the deployment properties
PORT=<%= properties.gemfire_locator.port %>
IPS="<%= properties.gemfire_locator.server_ips %>"
<% ip_str = "" %>
<% properties.gemfire_locator.server_ips.each_with_index do | ip, index | %>
<%   ip_port = ip + "[" + properties.gemfire_locator.port.to_s + "]" %>
<%   if index > 0 %>
<%     ip_str = ip_str + "," %>
<%   end %>
<%   ip_str = ip_str + ip_port %>
<% end %>
LOCATOR_STR=<%=  ip_str %> 
echo "Local Locator ip: $LOCATORIPADDR"
echo "Locator port: $PORT"
echo "Locator IPS: $IPS"  
echo "Full locator string: $LOCATOR_STR"

source /var/vcap/packages/common/utils.sh  

case $1 in

  start)
    pid_guard $PIDFILE "gemfire"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    cd $LOG_DIR

    # (re)move any existing directory that might contain stale state - only support adding an fresh node to the cluster
    if ls $LOCATORNAME &> /dev/null
    then
      rm -rf $LOG_DIR/$LOCATORNAME
    fi

    gfsh start locator --name=$LOCATORNAME --force=true --mcast-port=0 --J=-Dgemfire.bind-address=$LOCATORIPADDR --locators=$LOCATOR_STR --port=$PORT --connect=false | grep "Process ID" | sed s/Process\ ID:\ // > $PIDFILE
    ;;

  stop)
    # first try a graceful shutdown
    gfsh -e "connect --locator=$LOCATORIPADDR[$PORT]" -e "stop locator --name=$LOCATORNAME"
    # and if that doesn't work, kill the process
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: gemfirelocator_ctl {start|stop}"

    ;;

esac
